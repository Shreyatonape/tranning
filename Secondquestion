package CollectionFramework;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;

	
	class Message<T> 
	{
	     BlockingQueue<T> queue = new LinkedBlockingQueue<>();

	    public void put(T message) 
	    {
	        try
	        {
	            queue.put(message);
	            }
	        catch (InterruptedException e) 
	        {
	            Thread.currentThread().interrupt();
	        }
	    }

	    public T take() 
	    {
	        try
	        {
	            return queue.take();
	        } 
	        catch (InterruptedException e) 
	        {
	            Thread.currentThread().interrupt();
	            return null;
	        }
	    }
	}
	    public class Assignment2
	    {
	    	Runnable userInput;
	    	 Runnable responseUser;
	    

	        public void execute()
	        {
	            Message<String> s = new Message<>();

	            userInput = () ->
	           {
	                try (BufferedReader reader = new BufferedReader(new InputStreamReader(System.in)))
	                {
	                    String input;
	                    System.out.println("Start chatting! Use 'exit' to stop:");
	                    
	                    while ((input = reader.readLine()) != null)
	                    {
	                        s.put(input);
	                        if (input.equalsIgnoreCase("exit"))
	                            break;
	                    }
	                }
	                catch (Exception e)
	                {
	                    e.printStackTrace();
	                }
	            };

	            responseUser = () -> 
	           {
	                try
	                {
	                    while (true)
	                    {
	                        String message = s.take();
	                        if (message.equalsIgnoreCase("exit"))
	                        {
	                            System.out.println("Ok ThankYou!");
	                            break;
	                        }
	                        Thread.sleep(500); 
	                        System.out.println(" Your message is: " + message );
	                    }
	                }
	                catch (Exception e)
	                {
	                    e.printStackTrace();
	                }
	            };
	        }
	    	
		public static void main(String[] args)
	    {
			Assignment2 a = new Assignment2();
	        a.execute();
	        
	        new Thread(a.userInput).start();
	        new Thread(a.responseUser).start();
	    }
	  }
	
	
	    
